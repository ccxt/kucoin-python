# .github/workflows/reusable-workflow.yml
name: branch default workflow

on:
  workflow_call:
    inputs:
      exchange_name:
        description: "exchange-name of repo to transfer"
        required: true
        type: string

jobs:
  distribute_job:
    if: (contains(github.event.head_commit.message, 'build') && !contains(github.event.head_commit.message, 'skip ci'))
    name: distribute-job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          persist-credentials: false

      - name: Push to another repo (approach A)
        if: (!contains(github.event.head_commit.message, 'BUILD_WITH_REMOTE'))
        run: |
          TEMP_DIR=$(mktemp -d)
          TEMP_DIR_GIT="$TEMP_DIR/python-${{ inputs.exchange_name }}"
          git clone https://x-access-token:${{ secrets.API_TOKEN_FOR_CCXT_SINGLE_EXCHANGES }}@github.com/ccxt/python-${{ inputs.exchange_name }}.git $TEMP_DIR_GIT
          rsync -av --exclude='.git' ./ $TEMP_DIR_GIT
          cd $TEMP_DIR_GIT
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "build: ${{ github.sha }}"
          git push origin main --force
  
      # - name: Push to another repo (approach B)
      #   if: (contains(github.event.head_commit.message, 'BUILD_WITH_REMOTE'))
      #   run: |
      #     git config user.name github-actions
      #     git config user.email github-actions@github.com
      #     git remote add prod https://x-access-token:${{ secrets.API_TOKEN_FOR_CCXT_SINGLE_EXCHANGES }}@github.com/ccxt/python-${{ inputs.exchange_name }}.git
      #     git config pull.rebase false
      #     git fetch --unshallow origin
      #     git pull --allow-unrelated-histories prod main || echo "Git pull failed"
      #     git push prod main --force

      - name: Update README with repository links
        run: chmod +x ./build/update-readme.sh && ./build/update-readme.sh
      
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "Update README with exchange repository links" || echo "No changes to commit"
          git push